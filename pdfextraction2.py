# -*- coding: utf-8 -*-
"""PdfExtraction2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10zFyLQc27xN7DX04sSIV_sNmWPlT2Knm
"""

import pandas as pd
from pandas import ExcelWriter
from pandas import ExcelFile

import glob
from google.colab import drive
drive.mount('/gdrive', force_remount=True)

crisil_files = glob.glob(f"/gdrive/My Drive/crisil_pdfs/*.pdf")
icra_files = glob.glob(f"/gdrive/My Drive/icra_pdfs/*.pdf")
care_files = glob.glob(f"/gdrive/My Drive/care_pdfs/*.pdf")
brickworks_files = glob.glob(f"/gdrive/My Drive/brickworks_pdfs/*.pdf")
print(crisil_files)
print(icra_files)
print(care_files)
print(brickworks_files)

df = pd.read_excel("NEW Copy of MLDs_Price_30June2021.xlsx")

df_copy=df.copy()

# pip install PyPdf

# pip install tabula-py

import tabula

crisil_df_list=[]
for file in crisil_files:
  df_pdf = tabula.read_pdf(file, pages=1, lattice=True)
  new_header = df_pdf[0].iloc[0]
  df_pdf[0] = df_pdf[0][1:] 
  df_pdf[0].columns = new_header 
  df_filtered=df_pdf[0]
  df_filtered.columns = df_filtered.columns.str.replace("\r", " ")
  print(df_filtered)
  crisil_df_list.append(df_filtered)

crisil_large_df = pd.concat(crisil_df_list, ignore_index=True)

icra_df_list=[]
for file in icra_files:
  df_pdf = tabula.read_pdf(file, pages=[2], lattice=True)
  new_header = df_pdf[0].iloc[0]
  df_pdf[0] = df_pdf[0][1:] 
  df_pdf[0].columns = new_header 
  df_filtered=df_pdf[0]
  df_filtered.columns = ['ISIN No','Series','Date of Allotment','Maturity Date','Reference Asset','Face Value (in Rs.)','Valuation*']
  print(df_filtered)
  icra_df_list.append(df_filtered)

icra_large_df = pd.concat(icra_df_list, ignore_index=True)
icra_large_df = icra_large_df.replace({r'\r': ' '}, regex=True)

care_df_list=[]
for file in care_files:
  df_pdf = tabula.read_pdf(file, pages='all', pandas_options={'header': None})
  df_pdf[0]=df_pdf[0][4:]
  for i in range(len(df_pdf)):
    # df_pdf[i]=df_pdf[i][1:]
    care_df_list.append(df_pdf[i])
    print(df_pdf[i])

care_large_df=(pd.concat(care_df_list, ignore_index=True))
care_large_df.drop(care_large_df.iloc[:, 7:], inplace = True, axis = 1)
care_large_df=care_large_df.dropna()
care_large_df.columns = ['Series','ISIN Code','Reference Asset', 'Issue Date*', 'Maturity Date','Face Value per Debenture', 'Valuation']
care_large_df=care_large_df.reset_index(drop=True)

brickworks_df_list=[]
for file in brickworks_files:
  df_pdf = tabula.read_pdf(file, pages=1, lattice=True)
  new_header = df_pdf[0].iloc[0]
  df_pdf[0] = df_pdf[0][1:] 
  df_pdf[0].columns = new_header 
  df_filtered=df_pdf[0]
  df_filtered.columns = df_filtered.columns.str.replace("\r", " ")
  df_filtered["ISIN Code"] = df_filtered["ISIN Code"].replace({r'\r': ''}, regex=True)
  df_filtered = df_filtered.replace({r'\r': ' '}, regex=True)
  print(df_filtered)
  brickworks_df_list.append(df_filtered)

brickworks_large_df = pd.concat(brickworks_df_list, ignore_index=True)

df_price_crisil=crisil_large_df[["ISIN Code", "Valuation per Rs 100 Face Value"]]
df_price_crisil.columns=["ISIN", "Valuation"]
df_price_icra=icra_large_df[["ISIN No", "Valuation*"]]
df_price_icra.columns=["ISIN", "Valuation"]
df_price_care=care_large_df[["ISIN Code", "Valuation"]]
df_price_care.columns=["ISIN", "Valuation"]
df_price_brickworks=brickworks_large_df[["ISIN Code", "Valuation as on Present Week"]]
df_price_brickworks.columns=["ISIN", "Valuation"]

df_price = pd.concat([df_price_crisil,df_price_icra, df_price_care, df_price_brickworks], ignore_index=True)

for i in df_price["ISIN"]:
  if i in df["ISIN"].values:
    print(i)
    print(df.loc[df["ISIN"]==i, "Ticker"])
    print(df_price.loc[df_price["ISIN"]==i,"Valuation"].values[0])
    df.loc[df["ISIN"]==i, "Ticker"]=(df_price.loc[df_price["ISIN"]==i,"Valuation"].values[0])
    df.loc[df["ISIN"]==i, "PRICE"]=float(df.loc[df["ISIN"]==i,"Ticker"].values[0])*float(df.loc[df["ISIN"]==i, "FV"]*0.01)

writer = ExcelWriter('Revised_values.xlsx')
df.to_excel(writer, 'Main')
crisil_large_df.to_excel(writer, 'CRISIL')
icra_large_df.to_excel(writer, 'ICRA')
care_large_df.to_excel(writer, 'CARE')
care_large_df.to_excel(writer, 'BRICKWORKS')
writer.save()

